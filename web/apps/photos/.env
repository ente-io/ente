# Sample configuration file
#
# All variables are commented out by default. Copy paste this into a new file
# called `.env.local` (or create a new empty file with that name) and add the
# environment variables you want to apply. `.env.local` is gitignored, so you
# can freely customize it for your local setup.
#
# `.env.local` is picked up by Next.js when NODE_ENV is 'development' (it is
# 'production' by default, but gets set to 'development' when we run `next
# dev`). Here's a list of the various files that come into play:
#
#     .env                      loaded in all cases
#     .env.local                loaded in all cases, gitignored
#     .env.development          only loaded for yarn dev
#     .env.development.local    only loaded for yarn dev, gitignored
#     .env.production           only loaded for yarn build
#     .env.production.local     only loaded for yarn build, gitignored
#
# Alternatively, these variables can be provided as environment variables, say:
#
#     NEXT_PUBLIC_ENTE_ENDPOINT=http://localhost:8080 yarn dev:photos
#
# Variables prefixed with NEXT_PUBLIC_ are made available when Next.js runs our
# code in the browser (Behind the scenes, Next.js just hardcodes occurrences of
# `process.env.NEXT_PUBLIC_FOO` with the value of the `NEXT_PUBLIC_FOO` env var
# when the bundle is built). See
# https://nextjs.org/docs/pages/building-your-application/configuring/environment-variables
#
# A development build behaves differently in some aspects:
#
# - Logs go to the browser console (in addition to the log file)
# - There is some additional logging
# - ... (search for isDevBuild to see all impacts)
#
# Note that even in development build, the app still connects to the production
# APIs by default (can be customized using the env vars below). This is usually
# a good default, for example a customer cloning this repository would want to
# build and run the client from source but still use their actual Ente account.

# The Ente API endpoint
#
# NEXT_PUBLIC_ENTE_ENDPOINT = http://localhost:3000

# The URL for the shared albums deployment
#
# The shared albums are served from the photos app code, and "albums.ente.io" is
# a CNAME alias to the main photo app itself. When the main index page loads, it
# checks to see if the host is "albums.ente.io", and if so, redirects to
# /shared-albums.
#
# This environment variable allows us to check for a host other than
# "albums.ente.io". By setting this to localhost:3002 and running the photos app
# on port 3002 (using `yarn dev:albums`), we can connect to it and emulate the
# production behaviour.
#
# Note: To use your custom albums endpoint in the generated public link, set the
# `apps.public-albums` property in museum's configuration.
#
# Enhancement: Consider splitting this into a separate app/ in this repository.
# That can also reduce bundle sizes and make it load faster.
#
# NEXT_PUBLIC_ENTE_ALBUMS_ENDPOINT = http://localhost:3002

# The JSON which describes the expected results of our integration tests. See
# `upload.test.ts` for more details of the expected format.
#
# This is perhaps easier to specify as an environment variable, since then we
# can directly read from the source file when running `yarn dev`. For example,
#
#    NEXT_PUBLIC_ENTE_TEST_EXPECTED_JSON=`cat path/to/expected.json` yarn dev
#
# NEXT_PUBLIC_ENTE_TEST_EXPECTED_JSON = {}

NEXT_TELEMETRY_DISABLED = 1
